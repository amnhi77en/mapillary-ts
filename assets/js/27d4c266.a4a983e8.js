"use strict";(self.webpackChunkmapillary_js_doc=self.webpackChunkmapillary_js_doc||[]).push([[7334],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return N}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),m=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=m(e.components);return n.createElement(o.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),s=m(a),N=r,h=s["".concat(o,".").concat(N)]||s[N]||k[N]||i;return a?n.createElement(h,l(l({ref:t},d),{},{components:a})):n.createElement(h,l({ref:t},d))}));function N(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=s;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var m=2;m<i;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},9090:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return o},toc:function(){return m},default:function(){return k}});var n=a(2122),r=a(9756),i=(a(7294),a(3905)),l={id:"viewer.Viewer",title:"Class: Viewer",sidebar_label:"Viewer",custom_edit_url:null},p=void 0,o={unversionedId:"classes/viewer.Viewer",id:"classes/viewer.Viewer",isDocsHomePage:!1,title:"Class: Viewer",description:"viewer.Viewer",source:"@site/api/classes/viewer.Viewer.md",sourceDirName:"classes",slug:"/classes/viewer.Viewer",permalink:"/mapillary-js/api/classes/viewer.Viewer",editUrl:null,tags:[],version:"current",frontMatter:{id:"viewer.Viewer",title:"Class: Viewer",sidebar_label:"Viewer",custom_edit_url:null},sidebar:"api",previous:{title:"MapillaryError",permalink:"/mapillary-js/api/classes/viewer.MapillaryError"},next:{title:"CameraEnt",permalink:"/mapillary-js/api/interfaces/api.CameraEnt"}},m=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Implements",id:"implements",children:[]},{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Events",id:"events",children:[{value:"on",id:"on",children:[]}]},{value:"Accessors",id:"accessors",children:[{value:"dataProvider",id:"dataprovider",children:[]},{value:"isNavigable",id:"isnavigable",children:[]}]},{value:"Methods",id:"methods",children:[{value:"activateCombinedPanning",id:"activatecombinedpanning",children:[]},{value:"activateComponent",id:"activatecomponent",children:[]},{value:"activateCover",id:"activatecover",children:[]},{value:"addCustomRenderer",id:"addcustomrenderer",children:[]},{value:"attachCustomCameraControls",id:"attachcustomcameracontrols",children:[]},{value:"deactivateCombinedPanning",id:"deactivatecombinedpanning",children:[]},{value:"deactivateComponent",id:"deactivatecomponent",children:[]},{value:"deactivateCover",id:"deactivatecover",children:[]},{value:"detachCustomCameraControls",id:"detachcustomcameracontrols",children:[]},{value:"fire",id:"fire",children:[]},{value:"getBearing",id:"getbearing",children:[]},{value:"getCameraControls",id:"getcameracontrols",children:[]},{value:"getCanvas",id:"getcanvas",children:[]},{value:"getCanvasContainer",id:"getcanvascontainer",children:[]},{value:"getCenter",id:"getcenter",children:[]},{value:"getComponent",id:"getcomponent",children:[]},{value:"getContainer",id:"getcontainer",children:[]},{value:"getFieldOfView",id:"getfieldofview",children:[]},{value:"getImage",id:"getimage",children:[]},{value:"getPointOfView",id:"getpointofview",children:[]},{value:"getPosition",id:"getposition",children:[]},{value:"getReference",id:"getreference",children:[]},{value:"getZoom",id:"getzoom",children:[]},{value:"hasCustomCameraControls",id:"hascustomcameracontrols",children:[]},{value:"hasCustomRenderer",id:"hascustomrenderer",children:[]},{value:"moveDir",id:"movedir",children:[]},{value:"moveTo",id:"moveto",children:[]},{value:"off",id:"off",children:[]},{value:"project",id:"project",children:[]},{value:"projectFromBasic",id:"projectfrombasic",children:[]},{value:"remove",id:"remove",children:[]},{value:"removeCustomRenderer",id:"removecustomrenderer",children:[]},{value:"resize",id:"resize",children:[]},{value:"setAccessToken",id:"setaccesstoken",children:[]},{value:"setCameraControls",id:"setcameracontrols",children:[]},{value:"setCenter",id:"setcenter",children:[]},{value:"setFieldOfView",id:"setfieldofview",children:[]},{value:"setFilter",id:"setfilter",children:[]},{value:"setRenderMode",id:"setrendermode",children:[]},{value:"setTransitionMode",id:"settransitionmode",children:[]},{value:"setZoom",id:"setzoom",children:[]},{value:"triggerRerender",id:"triggerrerender",children:[]},{value:"unproject",id:"unproject",children:[]},{value:"unprojectToBasic",id:"unprojecttobasic",children:[]}]}],d={toc:m};function k(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/modules/viewer"},"viewer"),".Viewer"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"classdesc"))," The Viewer object represents the navigable image viewer.\nCreate a Viewer by specifying a container, client ID, image ID and\nother options. The viewer exposes methods and events for programmatic\ninteraction."),(0,i.kt)("p",null,"In the case of asynchronous methods, MapillaryJS returns promises to\nthe results. Notifications are always emitted through JavaScript events."),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/api.EventEmitter"},(0,i.kt)("inlineCode",{parentName:"a"},"EventEmitter"))),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Viewer"))))),(0,i.kt)("h2",{id:"implements"},"Implements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/viewer.IViewer"},(0,i.kt)("inlineCode",{parentName:"a"},"IViewer")))),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new Viewer"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"options"),")"),(0,i.kt)("p",null,"Create a new viewer instance."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The ",(0,i.kt)("inlineCode",{parentName:"p"},"Viewer")," object represents the street imagery\nviewer on your web page. It exposes methods and properties that\nyou can use to programatically change the view, and fires\nevents as users interact with it."),(0,i.kt)("p",null,"It is possible to initialize the viewer with or\nwithout a ID."),(0,i.kt)("p",null,"When you want to show a specific image in the viewer from\nthe start you should initialize it with a ID."),(0,i.kt)("p",null,"When you do not know the first image ID at implementation\ntime, e.g. in a map-viewer application you should initialize\nthe viewer without a ID and call ",(0,i.kt)("inlineCode",{parentName:"p"},"moveTo")," instead."),(0,i.kt)("p",null,"When initializing with an ID the viewer is bound to that ID\nuntil the image for that ID has been successfully loaded.\nAlso, a cover with the image of the ID will be shown.\nIf the data for that ID can not be loaded because the ID is\nfaulty or other errors occur it is not possible to navigate\nto another ID because the viewer is not navigable. The viewer\nbecomes navigable when the data for the ID has been loaded and\nthe image is shown in the viewer. This way of initializing\nthe viewer is mostly for embedding in blog posts and similar\nwhere one wants to show a specific image initially."),(0,i.kt)("p",null,"If the viewer is initialized without a ID (with null or\nundefined) it is not bound to any particular ID and it is\npossible to move to any ID with ",(0,i.kt)("inlineCode",{parentName:"p"},'viewer.moveTo("<my-image-id>")'),".\nIf the first move to a ID fails it is possible to move to another\nID. The viewer will show a black background until a move\nsucceeds. This way of intitializing is suited for a map-viewer\napplication when the initial ID is not known at implementation\ntime."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'var viewer = new Viewer({\n    accessToken: "<my-access-token>",\n    container: "<my-container-id>",\n});\n')),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerOptions"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerOptions"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Optional configuration object specifying Viewer's and the components' initial setup.")))),(0,i.kt)("h4",{id:"overrides"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/api.EventEmitter"},"EventEmitter"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/api.EventEmitter#constructor"},"constructor")),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L147"},"viewer/Viewer.ts:147")),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)("h3",{id:"on"},"on"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when the viewing direction of the camera changes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("bearing", function() {\n  console.log("A bearing event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"bearing"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerBearingEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerBearingEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#on"},"on")),(0,i.kt)("h4",{id:"overrides-1"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/api.EventEmitter"},"EventEmitter"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/api.EventEmitter#on"},"on")),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L844"},"viewer/Viewer.ts:844")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when a pointing device (usually a mouse) is\npressed and released at the same point in the viewer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("click", function() {\n  console.log("A click event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"click"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerMouseEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerMouseEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L863"},"viewer/Viewer.ts:863")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when the right button of the mouse is clicked\nwithin the viewer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("contextmenu", function() {\n  console.log("A contextmenu event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"contextmenu"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerMouseEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerMouseEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L882"},"viewer/Viewer.ts:882")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when the viewer is loading data."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("dataloading", function() {\n  console.log("A loading event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"dataloading"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerDataLoadingEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerDataLoadingEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L900"},"viewer/Viewer.ts:900")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when a pointing device (usually a mouse) is clicked twice at\nthe same point in the viewer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("dblclick", function() {\n  console.log("A dblclick event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"dblclick"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerMouseEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerMouseEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L919"},"viewer/Viewer.ts:919")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when the viewer's vertical field of view changes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("fov", function() {\n  console.log("A fov event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"fov"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerStateEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerStateEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L937"},"viewer/Viewer.ts:937")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired immediately after all necessary resources\nhave been downloaded and the first visually complete\nrendering of the viewer has occurred."),(0,i.kt)("p",null,"This event is only fired for viewer configurations where\nthe WebGL context is created, i.e. not when using the\nfallback functionality only."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Set an event listener\nviewer.on('load', function(event) {\n  console.log('A load event has occured');\n});\n")),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"load"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"ViewerLoadEvent"),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L960"},"viewer/Viewer.ts:960")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when a pointing device (usually a mouse) is pressed\nwithin the viewer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("mousedown", function() {\n  console.log("A mousedown event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"mousedown"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerMouseEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerMouseEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L979"},"viewer/Viewer.ts:979")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when a pointing device (usually a mouse)\nis moved within the viewer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("mousemove", function() {\n  console.log("A mousemove event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"mousemove"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerMouseEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerMouseEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L998"},"viewer/Viewer.ts:998")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when a pointing device (usually a mouse)\nleaves the viewer's canvas."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("mouseout", function() {\n  console.log("A mouseout event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"mouseout"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerMouseEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerMouseEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1017"},"viewer/Viewer.ts:1017")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when a pointing device (usually a mouse)\nis moved onto the viewer's canvas."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("mouseover", function() {\n  console.log("A mouseover event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"mouseover"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerMouseEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerMouseEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1036"},"viewer/Viewer.ts:1036")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when a pointing device (usually a mouse)\nis released within the viewer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("mouseup", function() {\n  console.log("A mouseup event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"mouseup"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerMouseEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerMouseEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1055"},"viewer/Viewer.ts:1055")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when the viewer motion stops and it is in a fixed\nposition with a fixed point of view."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("moveend", function() {\n  console.log("A moveend event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"moveend"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerStateEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerStateEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1074"},"viewer/Viewer.ts:1074")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when the motion from one view to another start,\neither by changing the position (e.g. when changing image)\nor when changing point of view\n(e.g. by interaction such as pan and zoom)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("movestart", function() {\n  console.log("A movestart event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"movestart"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerStateEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerStateEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1095"},"viewer/Viewer.ts:1095")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when the navigable state of the viewer changes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("navigable", function() {\n  console.log("A navigable event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"navigable"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerNavigableEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerNavigableEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1113"},"viewer/Viewer.ts:1113")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired every time the viewer navigates to a new image."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("image", function() {\n  console.log("A image event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"image"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerImageEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerImageEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1131"},"viewer/Viewer.ts:1131")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when the viewer's position changes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The viewer's position changes when transitioning\nbetween images."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("position", function() {\n  console.log("A position event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-17"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"position"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerStateEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerStateEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1152"},"viewer/Viewer.ts:1152")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when the viewer's point of view changes. The\npoint of view changes when the bearing, or tilt changes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("pov", function() {\n  console.log("A pov event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-18"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"pov"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerStateEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerStateEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1171"},"viewer/Viewer.ts:1171")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when the viewer's reference position changes."),(0,i.kt)("p",null,"The reference position specifies the origin in\nthe viewer's topocentric coordinate system."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("reference", function(reference) {\n  console.log("A reference event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-19"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"reference"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerReferenceEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerReferenceEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1192"},"viewer/Viewer.ts:1192")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired when the viewer is removed. After this event is emitted\nyou must not call any methods on the viewer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("remove", function() {\n  console.log("A remove event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-20"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"remove"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerStateEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerStateEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1211"},"viewer/Viewer.ts:1211")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired every time the sequence edges of the current image changes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("sequenceedges", function() {\n  console.log("A sequenceedges event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-21"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"sequenceedges"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerNavigationEdgeEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerNavigationEdgeEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-20"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1229"},"viewer/Viewer.ts:1229")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"on"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Fired every time the spatial edges of the current image changes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\n// Set an event listener\nviewer.on("spatialedges", function() {\n  console.log("A spatialedges event has occurred.");\n});\n')),(0,i.kt)("h4",{id:"parameters-22"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"spatialedges"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerNavigationEdgeEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerNavigationEdgeEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-21"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1247"},"viewer/Viewer.ts:1247")),(0,i.kt)("h2",{id:"accessors"},"Accessors"),(0,i.kt)("h3",{id:"dataprovider"},"dataProvider"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," ",(0,i.kt)("strong",{parentName:"p"},"dataProvider"),"(): ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.IDataProvider"},(0,i.kt)("inlineCode",{parentName:"a"},"IDataProvider"))),(0,i.kt)("p",null,"Returns the data provider used by the viewer to fetch\nall contracts, ents, and buffers."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The viewer's data provider can be set\nupon initialization through the ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.ViewerOptions#dataprovider"},"ViewerOptions.dataProvider"),"\nproperty."),(0,i.kt)("h4",{id:"returns-22"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.IDataProvider"},(0,i.kt)("inlineCode",{parentName:"a"},"IDataProvider"))),(0,i.kt)("p",null,"The viewer's data provider."),(0,i.kt)("h4",{id:"implementation-of-1"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#dataprovider"},"dataProvider")),(0,i.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L193"},"viewer/Viewer.ts:193")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isnavigable"},"isNavigable"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," ",(0,i.kt)("strong",{parentName:"p"},"isNavigable"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Return a boolean indicating if the viewer is in a navigable state."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The navigable state indicates if the viewer supports\nmoving, i.e. calling the ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.Viewer#moveto"},"moveTo")," and ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.Viewer#movedir"},"moveDir"),"\nmethods or changing the authentication state,\ni.e. calling ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.Viewer#setaccesstoken"},"setAccessToken"),". The viewer will not be in a navigable\nstate if the cover is activated and the viewer has been supplied a ID.\nWhen the cover is deactivated or the viewer is activated without being\nsupplied a ID it will be navigable."),(0,i.kt)("h4",{id:"returns-23"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Boolean indicating whether the viewer is navigable."),(0,i.kt)("h4",{id:"implementation-of-2"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#isnavigable"},"isNavigable")),(0,i.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L210"},"viewer/Viewer.ts:210")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"activatecombinedpanning"},"activateCombinedPanning"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activateCombinedPanning"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Activate the combined panning functionality."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The combined panning functionality is active by default."),(0,i.kt)("h4",{id:"returns-24"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-3"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#activatecombinedpanning"},"activateCombinedPanning")),(0,i.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L219"},"viewer/Viewer.ts:219")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"activatecomponent"},"activateComponent"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activateComponent"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"name"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Activate a component."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'viewer.activateComponent("marker");\n')),(0,i.kt)("h4",{id:"parameters-23"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/modules/component#componentname"},(0,i.kt)("inlineCode",{parentName:"a"},"ComponentName"))," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/modules/component#fallbackcomponentname"},(0,i.kt)("inlineCode",{parentName:"a"},"FallbackComponentName"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Name of the component which will become active.")))),(0,i.kt)("h4",{id:"returns-25"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-4"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#activatecomponent"},"activateComponent")),(0,i.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L234"},"viewer/Viewer.ts:234")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"activatecover"},"activateCover"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"activateCover"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Activate the cover (deactivates all other components)."),(0,i.kt)("h4",{id:"returns-26"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-5"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#activatecover"},"activateCover")),(0,i.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L242"},"viewer/Viewer.ts:242")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"addcustomrenderer"},"addCustomRenderer"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"addCustomRenderer"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"renderer"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Add a custom renderer to the viewer's rendering pipeline."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," During a render pass, custom renderers\nare called in the order they were added."),(0,i.kt)("h4",{id:"parameters-24"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"renderer")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ICustomRenderer"},(0,i.kt)("inlineCode",{parentName:"a"},"ICustomRenderer"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The custom renderer implementation.")))),(0,i.kt)("h4",{id:"returns-27"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-6"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#addcustomrenderer"},"addCustomRenderer")),(0,i.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L254"},"viewer/Viewer.ts:254")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"attachcustomcameracontrols"},"attachCustomCameraControls"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"attachCustomCameraControls"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"controls"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Attach custom camera controls to control the viewer's\ncamera pose and projection."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," Custom camera controls allow the API user\nto move the viewer's camera freely and define the camera\nprojection. These camera properties are used\nto render the viewer 3D scene directly into the\nviewer's GL context."),(0,i.kt)("p",null,"Only a single custom camera control instance can be\nattached to the viewer. A new custom camera control\ninstance can be attached after detaching a previous\none."),(0,i.kt)("p",null,"Set the viewer's camera controls to\n",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/viewer.CameraControls#custom"},"CameraControls.Custom")," to activate attached\ncamera controls. If ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/viewer.CameraControls#custom"},"CameraControls.Custom"),"\nhas already been set when a custom camera control\ninstance is attached, it will be activated immediately."),(0,i.kt)("p",null,"Set the viewer's camera controls to any other\n",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/viewer.CameraControls"},"CameraControls")," mode to deactivate the\ncustom camera controls."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," {MapillaryError} When camera controls attached\nare already attached to the viewer."),(0,i.kt)("h4",{id:"parameters-25"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"controls")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ICustomCameraControls"},(0,i.kt)("inlineCode",{parentName:"a"},"ICustomCameraControls"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The custom camera controls implementation.")))),(0,i.kt)("h4",{id:"returns-28"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-7"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#attachcustomcameracontrols"},"attachCustomCameraControls")),(0,i.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L288"},"viewer/Viewer.ts:288")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"deactivatecombinedpanning"},"deactivateCombinedPanning"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"deactivateCombinedPanning"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Deactivate the combined panning functionality."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," Deactivating the combined panning functionality\ncould be needed in scenarios involving sequence only navigation."),(0,i.kt)("h4",{id:"returns-29"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-8"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#deactivatecombinedpanning"},"deactivateCombinedPanning")),(0,i.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L298"},"viewer/Viewer.ts:298")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"deactivatecomponent"},"deactivateComponent"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"deactivateComponent"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"name"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Deactivate a component."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'viewer.deactivateComponent("pointer");\n')),(0,i.kt)("h4",{id:"parameters-26"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/modules/component#componentname"},(0,i.kt)("inlineCode",{parentName:"a"},"ComponentName"))," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/modules/component#fallbackcomponentname"},(0,i.kt)("inlineCode",{parentName:"a"},"FallbackComponentName"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Name of component which become inactive.")))),(0,i.kt)("h4",{id:"returns-30"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-9"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#deactivatecomponent"},"deactivateComponent")),(0,i.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L313"},"viewer/Viewer.ts:313")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"deactivatecover"},"deactivateCover"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"deactivateCover"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Deactivate the cover (activates all components marked as active)."),(0,i.kt)("h4",{id:"returns-31"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-10"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#deactivatecover"},"deactivateCover")),(0,i.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L321"},"viewer/Viewer.ts:321")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"detachcustomcameracontrols"},"detachCustomCameraControls"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"detachCustomCameraControls"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.ICustomCameraControls"},(0,i.kt)("inlineCode",{parentName:"a"},"ICustomCameraControls")),">"),(0,i.kt)("p",null,"Detach a previously attached custom camera control\ninstance from the viewer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," If no custom camera control instance\nhas previously been attached, calling this method\nhas no effect."),(0,i.kt)("p",null,"Already attached custom camera controls need to\nbe detached before attaching another custom camera\ncontrol instance."),(0,i.kt)("h4",{id:"returns-32"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.ICustomCameraControls"},(0,i.kt)("inlineCode",{parentName:"a"},"ICustomCameraControls")),">"),(0,i.kt)("h4",{id:"implementation-of-11"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#detachcustomcameracontrols"},"detachCustomCameraControls")),(0,i.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L337"},"viewer/Viewer.ts:337")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fire"},"fire"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fire"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"event"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-27"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"bearing"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerBearingEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerBearingEvent")))))),(0,i.kt)("h4",{id:"returns-33"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-12"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#fire"},"fire")),(0,i.kt)("h4",{id:"overrides-2"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.fire"),(0,i.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L341"},"viewer/Viewer.ts:341")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fire"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"event"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-28"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"dataloading"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerDataLoadingEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerDataLoadingEvent")))))),(0,i.kt)("h4",{id:"returns-34"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-13"},"Implementation of"),(0,i.kt)("p",null,"IViewer.fire"),(0,i.kt)("h4",{id:"overrides-3"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.fire"),(0,i.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L345"},"viewer/Viewer.ts:345")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fire"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"event"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-29"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"navigable"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerNavigableEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerNavigableEvent")))))),(0,i.kt)("h4",{id:"returns-35"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-14"},"Implementation of"),(0,i.kt)("p",null,"IViewer.fire"),(0,i.kt)("h4",{id:"overrides-4"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.fire"),(0,i.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L349"},"viewer/Viewer.ts:349")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fire"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"event"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-30"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"image"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerImageEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerImageEvent")))))),(0,i.kt)("h4",{id:"returns-36"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-15"},"Implementation of"),(0,i.kt)("p",null,"IViewer.fire"),(0,i.kt)("h4",{id:"overrides-5"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.fire"),(0,i.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L353"},"viewer/Viewer.ts:353")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fire"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"event"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-31"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"sequenceedges"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"spatialedges"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerNavigationEdgeEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerNavigationEdgeEvent")))))),(0,i.kt)("h4",{id:"returns-37"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-16"},"Implementation of"),(0,i.kt)("p",null,"IViewer.fire"),(0,i.kt)("h4",{id:"overrides-6"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.fire"),(0,i.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L357"},"viewer/Viewer.ts:357")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fire"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"event"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-32"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"reference"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerReferenceEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerReferenceEvent")))))),(0,i.kt)("h4",{id:"returns-38"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-17"},"Implementation of"),(0,i.kt)("p",null,"IViewer.fire"),(0,i.kt)("h4",{id:"overrides-7"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.fire"),(0,i.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L361"},"viewer/Viewer.ts:361")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fire"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"event"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-33"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"fov"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"moveend"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"movestart"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"position"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"pov"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"remove"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerStateEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerStateEvent")))))),(0,i.kt)("h4",{id:"returns-39"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-18"},"Implementation of"),(0,i.kt)("p",null,"IViewer.fire"),(0,i.kt)("h4",{id:"overrides-8"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.fire"),(0,i.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L365"},"viewer/Viewer.ts:365")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fire"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"event"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-34"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"click"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"contextmenu"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"dblclick"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"mousedown"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"mousemove"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"mouseout"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"mouseover"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"mouseup"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"event")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerMouseEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerMouseEvent")))))),(0,i.kt)("h4",{id:"returns-40"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-19"},"Implementation of"),(0,i.kt)("p",null,"IViewer.fire"),(0,i.kt)("h4",{id:"overrides-9"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.fire"),(0,i.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L369"},"viewer/Viewer.ts:369")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getbearing"},"getBearing"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getBearing"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("p",null,"Get the bearing of the current viewer camera."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The bearing depends on how the camera\nis currently rotated and does not correspond\nto the compass angle of the current image if the view\nhas been panned."),(0,i.kt)("p",null,"Bearing is measured in degrees clockwise with respect to\nnorth."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.getBearing().then(b => { console.log(b); });\n")),(0,i.kt)("h4",{id:"returns-41"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("p",null,"Promise to the bearing\nof the current viewer camera."),(0,i.kt)("h4",{id:"implementation-of-20"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#getbearing"},"getBearing")),(0,i.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L399"},"viewer/Viewer.ts:399")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getcameracontrols"},"getCameraControls"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getCameraControls"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/viewer.CameraControls"},(0,i.kt)("inlineCode",{parentName:"a"},"CameraControls")),">"),(0,i.kt)("p",null,"Get the viewer's camera control mode."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The camera control mode determines\nhow the camera is controlled when the viewer\nreceives pointer and keyboard input."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.getCameraControls().then(c => { console.log(c); });\n")),(0,i.kt)("h4",{id:"returns-42"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/viewer.CameraControls"},(0,i.kt)("inlineCode",{parentName:"a"},"CameraControls")),">"),(0,i.kt)("p",null,"controls - Camera control mode."),(0,i.kt)("h4",{id:"implementation-of-21"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#getcameracontrols"},"getCameraControls")),(0,i.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L428"},"viewer/Viewer.ts:428")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getcanvas"},"getCanvas"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getCanvas"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"HTMLCanvasElement")),(0,i.kt)("p",null,"Returns the viewer's canvas element."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," This is the element onto which the viewer renders\nthe WebGL content."),(0,i.kt)("h4",{id:"returns-43"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"HTMLCanvasElement")),(0,i.kt)("p",null,"The viewer's canvas element, or\nnull or not initialized."),(0,i.kt)("h4",{id:"implementation-of-22"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#getcanvas"},"getCanvas")),(0,i.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L464"},"viewer/Viewer.ts:464")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getcanvascontainer"},"getCanvasContainer"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getCanvasContainer"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"HTMLDivElement")),(0,i.kt)("p",null,"Returns the HTML element containing the viewer's canvas element."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," This is the element to which event bindings for viewer\ninteractivity (such as panning and zooming) are attached."),(0,i.kt)("h4",{id:"returns-44"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"HTMLDivElement")),(0,i.kt)("p",null,"The container for the viewer's\ncanvas element."),(0,i.kt)("h4",{id:"implementation-of-23"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#getcanvascontainer"},"getCanvasContainer")),(0,i.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L477"},"viewer/Viewer.ts:477")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getcenter"},"getCenter"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getCenter"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"[]",">"),(0,i.kt)("p",null,"Get the basic coordinates of the current image that is\nat the center of the viewport."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," Basic coordinates are 2D coordinates on the ","[0, 1]"," interval\nand have the origin point, (0, 0), at the top left corner and the\nmaximum value, (1, 1), at the bottom right corner of the original\nimage."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.getCenter().then(c => { console.log(c); });\n")),(0,i.kt)("h4",{id:"returns-45"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"[]",">"),(0,i.kt)("p",null,"Promise to the basic coordinates\nof the current image at the center for the viewport."),(0,i.kt)("h4",{id:"implementation-of-24"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#getcenter"},"getCenter")),(0,i.kt)("h4",{id:"defined-in-46"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L498"},"viewer/Viewer.ts:498")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getcomponent"},"getComponent"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getComponent"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"TComponent"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"name"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"TComponent")),(0,i.kt)("p",null,"Get a component."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'var pointerComponent = viewer.getComponent("pointer");\n')),(0,i.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TComponent")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/classes/component.Component"},(0,i.kt)("inlineCode",{parentName:"a"},"Component")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"ComponentConfiguration"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"TComponent"),">")))),(0,i.kt)("h4",{id:"parameters-35"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/modules/component#componentname"},(0,i.kt)("inlineCode",{parentName:"a"},"ComponentName"))," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/modules/component#fallbackcomponentname"},(0,i.kt)("inlineCode",{parentName:"a"},"FallbackComponentName"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Name of component.")))),(0,i.kt)("h4",{id:"returns-46"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"TComponent")),(0,i.kt)("p",null,"The requested component."),(0,i.kt)("h4",{id:"implementation-of-25"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#getcomponent"},"getComponent")),(0,i.kt)("h4",{id:"defined-in-47"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L523"},"viewer/Viewer.ts:523")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getcontainer"},"getContainer"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getContainer"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"HTMLElement")),(0,i.kt)("p",null,"Returns the viewer's containing HTML element."),(0,i.kt)("h4",{id:"returns-47"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"HTMLElement")),(0,i.kt)("p",null,"The viewer's container."),(0,i.kt)("h4",{id:"implementation-of-26"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#getcontainer"},"getContainer")),(0,i.kt)("h4",{id:"defined-in-48"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L533"},"viewer/Viewer.ts:533")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getfieldofview"},"getFieldOfView"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getFieldOfView"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("p",null,"Get the viewer's current vertical field of view."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The vertical field of view rendered on the viewer canvas\nmeasured in degrees."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.getFieldOfView().then(fov => { console.log(fov); });\n")),(0,i.kt)("h4",{id:"returns-48"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("p",null,"Promise to the current field of view\nof the viewer camera."),(0,i.kt)("h4",{id:"implementation-of-27"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#getfieldofview"},"getFieldOfView")),(0,i.kt)("h4",{id:"defined-in-49"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L551"},"viewer/Viewer.ts:551")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getimage"},"getImage"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getImage"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.Image"},(0,i.kt)("inlineCode",{parentName:"a"},"Image")),">"),(0,i.kt)("p",null,"Get the viewer's current image."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.getImage().then(image => { console.log(image.id); });\n")),(0,i.kt)("h4",{id:"returns-49"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.Image"},(0,i.kt)("inlineCode",{parentName:"a"},"Image")),">"),(0,i.kt)("p",null,"Promise to the current image."),(0,i.kt)("h4",{id:"implementation-of-28"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#getimage"},"getImage")),(0,i.kt)("h4",{id:"defined-in-50"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L576"},"viewer/Viewer.ts:576")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getpointofview"},"getPointOfView"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getPointOfView"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.PointOfView"},(0,i.kt)("inlineCode",{parentName:"a"},"PointOfView")),">"),(0,i.kt)("p",null,"Get the viewer's current point of view."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.getPointOfView().then(pov => { console.log(pov); });\n")),(0,i.kt)("h4",{id:"returns-50"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.PointOfView"},(0,i.kt)("inlineCode",{parentName:"a"},"PointOfView")),">"),(0,i.kt)("p",null,"Promise to the current point of view\nof the viewer camera."),(0,i.kt)("h4",{id:"implementation-of-29"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#getpointofview"},"getPointOfView")),(0,i.kt)("h4",{id:"defined-in-51"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L599"},"viewer/Viewer.ts:599")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getposition"},"getPosition"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getPosition"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.LngLat"},(0,i.kt)("inlineCode",{parentName:"a"},"LngLat")),">"),(0,i.kt)("p",null,"Get the viewer's current position"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.getPosition().then(pos => { console.log(pos); });\n")),(0,i.kt)("h4",{id:"returns-51"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.LngLat"},(0,i.kt)("inlineCode",{parentName:"a"},"LngLat")),">"),(0,i.kt)("p",null,"Promise to the viewers's current\nposition."),(0,i.kt)("h4",{id:"implementation-of-30"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#getposition"},"getPosition")),(0,i.kt)("h4",{id:"defined-in-52"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L630"},"viewer/Viewer.ts:630")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getreference"},"getReference"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getReference"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.LngLatAlt"},(0,i.kt)("inlineCode",{parentName:"a"},"LngLatAlt")),">"),(0,i.kt)("p",null,"Get the viewer's current reference position."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The reference position specifies the origin in\nthe viewer's topocentric coordinate system."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.getReference().then(reference => { console.log(reference); });\n")),(0,i.kt)("h4",{id:"returns-52"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.LngLatAlt"},(0,i.kt)("inlineCode",{parentName:"a"},"LngLatAlt")),">"),(0,i.kt)("p",null,"Promise to the reference position."),(0,i.kt)("h4",{id:"implementation-of-31"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#getreference"},"getReference")),(0,i.kt)("h4",{id:"defined-in-53"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L660"},"viewer/Viewer.ts:660")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getzoom"},"getZoom"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getZoom"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("p",null,"Get the image's current zoom level."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.getZoom().then(z => { console.log(z); });\n")),(0,i.kt)("h4",{id:"returns-53"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,i.kt)("p",null,"Promise to the viewers's current\nzoom level."),(0,i.kt)("h4",{id:"implementation-of-32"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#getzoom"},"getZoom")),(0,i.kt)("h4",{id:"defined-in-54"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L683"},"viewer/Viewer.ts:683")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hascustomcameracontrols"},"hasCustomCameraControls"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"hasCustomCameraControls"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"controls"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Check if a controls instance is the camera controls that are\ncurrently attached to the viewer."),(0,i.kt)("h4",{id:"parameters-36"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"controls")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ICustomCameraControls"},(0,i.kt)("inlineCode",{parentName:"a"},"ICustomCameraControls"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Camera controls instance.")))),(0,i.kt)("h4",{id:"returns-54"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Value indicating whether the controls instance\nis currently attached."),(0,i.kt)("h4",{id:"implementation-of-33"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#hascustomcameracontrols"},"hasCustomCameraControls")),(0,i.kt)("h4",{id:"defined-in-55"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L705"},"viewer/Viewer.ts:705")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hascustomrenderer"},"hasCustomRenderer"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"hasCustomRenderer"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"rendererId"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Check if a custom renderer has been added to the viewer's\nrendering pipeline."),(0,i.kt)("h4",{id:"parameters-37"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"rendererId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-55"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Value indicating whether the customer\nrenderer has been added."),(0,i.kt)("h4",{id:"implementation-of-34"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#hascustomrenderer"},"hasCustomRenderer")),(0,i.kt)("h4",{id:"defined-in-56"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L717"},"viewer/Viewer.ts:717")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"movedir"},"moveDir"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"moveDir"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"direction"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.Image"},(0,i.kt)("inlineCode",{parentName:"a"},"Image")),">"),(0,i.kt)("p",null,"Navigate in a given direction."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," If the current image does not have the edge direction\nor the edges has not yet been cached."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," Propagates any IO errors to the caller."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," When viewer is not navigable."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.CancelMapillaryError"},"CancelMapillaryError")," When a subsequent move request\nis made before the move dir call has completed."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.moveDir(NavigationDirection.Next).then(\n    image => { console.log(image); },\n    error => { console.error(error); });\n")),(0,i.kt)("h4",{id:"parameters-38"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"direction")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/enums/viewer.NavigationDirection"},(0,i.kt)("inlineCode",{parentName:"a"},"NavigationDirection"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Direction in which which to move.")))),(0,i.kt)("h4",{id:"returns-56"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.Image"},(0,i.kt)("inlineCode",{parentName:"a"},"Image")),">"),(0,i.kt)("p",null,"Promise to the image that was navigated to."),(0,i.kt)("h4",{id:"implementation-of-35"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#movedir"},"moveDir")),(0,i.kt)("h4",{id:"defined-in-57"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L740"},"viewer/Viewer.ts:740")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"moveto"},"moveTo"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"moveTo"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"imageId"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.Image"},(0,i.kt)("inlineCode",{parentName:"a"},"Image")),">"),(0,i.kt)("p",null,"Navigate to a given image ID."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," Propagates any IO errors to the caller."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," When viewer is not navigable."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.CancelMapillaryError"},"CancelMapillaryError")," When a subsequent\nmove request is made before the move to ID call has completed."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'viewer.moveTo("<my-image-id>").then(\n    image => { console.log(image); },\n    error => { console.error(error); });\n')),(0,i.kt)("h4",{id:"parameters-39"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"imageId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Id of the image to move to.")))),(0,i.kt)("h4",{id:"returns-57"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.Image"},(0,i.kt)("inlineCode",{parentName:"a"},"Image")),">"),(0,i.kt)("p",null,"Promise to the image that was navigated to."),(0,i.kt)("h4",{id:"implementation-of-36"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#moveto"},"moveTo")),(0,i.kt)("h4",{id:"defined-in-58"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L774"},"viewer/Viewer.ts:774")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"off"},"off"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"off"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Unsubscribe from an event by its name."),(0,i.kt)("h4",{id:"parameters-40"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"bearing"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerBearingEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerBearingEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-58"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-37"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#off"},"off")),(0,i.kt)("h4",{id:"overrides-10"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/api.EventEmitter"},"EventEmitter"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/api.EventEmitter#off"},"off")),(0,i.kt)("h4",{id:"defined-in-59"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L791"},"viewer/Viewer.ts:791")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"off"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-41"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"dataloading"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerDataLoadingEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerDataLoadingEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-59"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-38"},"Implementation of"),(0,i.kt)("p",null,"IViewer.off"),(0,i.kt)("h4",{id:"overrides-11"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.off"),(0,i.kt)("h4",{id:"defined-in-60"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L795"},"viewer/Viewer.ts:795")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"off"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-42"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"navigable"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerNavigableEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerNavigableEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-60"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-39"},"Implementation of"),(0,i.kt)("p",null,"IViewer.off"),(0,i.kt)("h4",{id:"overrides-12"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.off"),(0,i.kt)("h4",{id:"defined-in-61"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L799"},"viewer/Viewer.ts:799")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"off"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-43"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"image"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerImageEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerImageEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-61"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-40"},"Implementation of"),(0,i.kt)("p",null,"IViewer.off"),(0,i.kt)("h4",{id:"overrides-13"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.off"),(0,i.kt)("h4",{id:"defined-in-62"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L803"},"viewer/Viewer.ts:803")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"off"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-44"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"sequenceedges"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"spatialedges"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerNavigationEdgeEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerNavigationEdgeEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-62"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-41"},"Implementation of"),(0,i.kt)("p",null,"IViewer.off"),(0,i.kt)("h4",{id:"overrides-14"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.off"),(0,i.kt)("h4",{id:"defined-in-63"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L807"},"viewer/Viewer.ts:807")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"off"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-45"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"reference"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerReferenceEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerReferenceEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-63"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-42"},"Implementation of"),(0,i.kt)("p",null,"IViewer.off"),(0,i.kt)("h4",{id:"overrides-15"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.off"),(0,i.kt)("h4",{id:"defined-in-64"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L811"},"viewer/Viewer.ts:811")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"off"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-46"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"fov"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"moveend"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"movestart"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"position"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"pov"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"remove"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerStateEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerStateEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-64"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-43"},"Implementation of"),(0,i.kt)("p",null,"IViewer.off"),(0,i.kt)("h4",{id:"overrides-16"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.off"),(0,i.kt)("h4",{id:"defined-in-65"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L815"},"viewer/Viewer.ts:815")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"off"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-47"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"click"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"contextmenu"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"dblclick"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"mousedown"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"mousemove"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"mouseout"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"mouseover"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},'"mouseup"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/viewer.ViewerMouseEvent"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewerMouseEvent")),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-65"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-44"},"Implementation of"),(0,i.kt)("p",null,"IViewer.off"),(0,i.kt)("h4",{id:"overrides-17"},"Overrides"),(0,i.kt)("p",null,"EventEmitter.off"),(0,i.kt)("h4",{id:"defined-in-66"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L819"},"viewer/Viewer.ts:819")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"project"},"project"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"project"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lngLat"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"[]",">"),(0,i.kt)("p",null,"Project geodetic coordinates to canvas pixel coordinates."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The geodetic coordinates may not always correspond to pixel\ncoordinates, e.g. if the geodetic coordinates have a position behind the\nviewer camera. In the case of no correspondence the returned value will\nbe ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,i.kt)("p",null,"If the distance from the viewer camera position to the provided\nlongitude-latitude is more than 1000 meters ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," will be returned."),(0,i.kt)("p",null,"The projection is performed from the ground plane, i.e.\nthe altitude with respect to the ground plane for the geodetic\npoint is zero."),(0,i.kt)("p",null,"Note that whenever the camera moves, the result of the method will be\ndifferent."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'viewer.project({ lat: 0, lng: 0 })\n    .then(pixelPoint => {\n         if (!pixelPoint) {\n             console.log("no correspondence");\n         }\n\n         console.log(pixelPoint);\n    });\n')),(0,i.kt)("h4",{id:"parameters-48"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lngLat")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/api.LngLat"},(0,i.kt)("inlineCode",{parentName:"a"},"LngLat"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Geographical coordinates to project.")))),(0,i.kt)("h4",{id:"returns-66"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"[]",">"),(0,i.kt)("p",null,"Promise to the pixel coordinates corresponding\nto the lngLat."),(0,i.kt)("h4",{id:"implementation-of-45"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#project"},"project")),(0,i.kt)("h4",{id:"defined-in-67"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1292"},"viewer/Viewer.ts:1292")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"projectfrombasic"},"projectFromBasic"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"projectFromBasic"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"basicPoint"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"[]",">"),(0,i.kt)("p",null,"Project basic image coordinates for the current image to canvas pixel\ncoordinates."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The basic image coordinates may not always correspond to a\npixel point that lies in the visible area of the viewer container. In the\ncase of no correspondence the returned value can be ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.projectFromBasic([0.3, 0.7])\n    .then(pixelPoint => { console.log(pixelPoint); });\n")),(0,i.kt)("h4",{id:"parameters-49"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"basicPoint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Basic images coordinates to project.")))),(0,i.kt)("h4",{id:"returns-67"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"[]",">"),(0,i.kt)("p",null,"Promise to the pixel coordinates corresponding\nto the basic image point."),(0,i.kt)("h4",{id:"implementation-of-46"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#projectfrombasic"},"projectFromBasic")),(0,i.kt)("h4",{id:"defined-in-68"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1325"},"viewer/Viewer.ts:1325")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"remove"},"remove"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"remove"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Clean up and release all internal resources associated with\nthis viewer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," This includes DOM elements, event bindings, and\nWebGL resources."),(0,i.kt)("p",null,"Use this method when you are done using the viewer and wish to\nensure that it no longer consumes browser resources. Afterwards,\nyou must not call any other methods on the viewer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"fires"))," remove"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.remove();\n")),(0,i.kt)("h4",{id:"returns-68"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-47"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#remove"},"remove")),(0,i.kt)("h4",{id:"defined-in-69"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1357"},"viewer/Viewer.ts:1357")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removecustomrenderer"},"removeCustomRenderer"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeCustomRenderer"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"rendererId"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Remove a custom renderer from the viewer's rendering pipeline."),(0,i.kt)("h4",{id:"parameters-50"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"rendererId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-69"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-48"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#removecustomrenderer"},"removeCustomRenderer")),(0,i.kt)("h4",{id:"defined-in-70"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1378"},"viewer/Viewer.ts:1378")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"resize"},"resize"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"resize"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Detect the viewer's new width and height and resize it\nmanually."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The components will also detect the viewer's\nnew size and resize their rendered elements if needed."),(0,i.kt)("p",null,"When the ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.ViewerOptions#trackresize"},"ViewerOptions.trackResize")," option is\nset to true, the viewer will automatically resize\nwhen the browser window is resized. If any other\ncustom behavior is preferred, the option should be set\nto false and the ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.Viewer#resize"},"Viewer.resize")," method should\nbe called on demand."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.resize();\n")),(0,i.kt)("h4",{id:"returns-70"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-49"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#resize"},"resize")),(0,i.kt)("h4",{id:"defined-in-71"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1401"},"viewer/Viewer.ts:1401")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setaccesstoken"},"setAccessToken"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setAccessToken"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"accessToken?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Set an access token for authenticated API requests of protected\nresources."),(0,i.kt)("p",null,"The token may be a user access token or a client access token."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," When the supplied user token is null or undefined,\nany previously set user bearer token will be cleared and the\nviewer will make unauthenticated requests."),(0,i.kt)("p",null,"Calling setAccessToken aborts all outstanding move requests.\nThe promises of those move requests will be rejected with a\n",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.CancelMapillaryError"},"CancelMapillaryError")," the rejections need to be caught."),(0,i.kt)("p",null,"Calling setAccessToken also resets the complete viewer cache\nso it should not be called repeatedly."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," When viewer is not navigable."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'viewer.setAccessToken("<my access token>")\n    .then(() => { console.log("user token set"); });\n')),(0,i.kt)("h4",{id:"parameters-51"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"accessToken?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-71"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Promise that resolves after token\nis set."),(0,i.kt)("h4",{id:"implementation-of-50"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#setaccesstoken"},"setAccessToken")),(0,i.kt)("h4",{id:"defined-in-72"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1610"},"viewer/Viewer.ts:1610")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setcameracontrols"},"setCameraControls"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setCameraControls"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"controls"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Set the viewer's camera control mode."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The camera control mode determines\nhow the camera is controlled when the viewer\nreceives pointer and keyboard input."),(0,i.kt)("p",null,"Changing the camera control mode is not possible\nwhen the slider component is active and attempts\nto do so will be ignored."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.setCameraControls(CameraControls.Street);\n")),(0,i.kt)("h4",{id:"parameters-52"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"controls")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/enums/viewer.CameraControls"},(0,i.kt)("inlineCode",{parentName:"a"},"CameraControls"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Camera control mode.")))),(0,i.kt)("h4",{id:"returns-72"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-51"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#setcameracontrols"},"setCameraControls")),(0,i.kt)("h4",{id:"defined-in-73"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1423"},"viewer/Viewer.ts:1423")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setcenter"},"setCenter"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setCenter"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"center"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Set the basic coordinates of the current image to be in the\ncenter of the viewport."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," Basic coordinates are 2D coordinates on the ","[0, 1]"," interval\nand has the origin point, (0, 0), at the top left corner and the\nmaximum value, (1, 1), at the bottom right corner of the original\nimage."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.setCenter([0.5, 0.5]);\n")),(0,i.kt)("h4",{id:"parameters-53"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"center")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"),"[]")))),(0,i.kt)("h4",{id:"returns-73"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-52"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#setcenter"},"setCenter")),(0,i.kt)("h4",{id:"defined-in-74"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1454"},"viewer/Viewer.ts:1454")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setfieldofview"},"setFieldOfView"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setFieldOfView"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"fov"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Set the viewer's current vertical field of view."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," Sets the vertical field of view rendered\non the viewer canvas measured in degrees. The value\nwill be clamped to be able to set a valid zoom level\nbased on the projection model of the current image and\nthe viewer's current render mode."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.setFieldOfView(45);\n")),(0,i.kt)("h4",{id:"parameters-54"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fov")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Vertical field of view in degrees.")))),(0,i.kt)("h4",{id:"returns-74"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-53"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#setfieldofview"},"setFieldOfView")),(0,i.kt)("h4",{id:"defined-in-75"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1474"},"viewer/Viewer.ts:1474")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setfilter"},"setFilter"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setFilter"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"filter?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Set the filter selecting images to use when calculating\nthe spatial edges."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The following filter types are supported:"),(0,i.kt)("p",null,"Comparison"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'["==", key, value]')," equality: ",(0,i.kt)("inlineCode",{parentName:"p"},"image[key] = value")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'["!=", key, value]')," inequality: ",(0,i.kt)("inlineCode",{parentName:"p"},"image[key] \u2260 value")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'["<", key, value]')," less than: ",(0,i.kt)("inlineCode",{parentName:"p"},"image[key] < value")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'["<=", key, value]')," less than or equal: ",(0,i.kt)("inlineCode",{parentName:"p"},"image[key] \u2264 value")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'[">", key, value]')," greater than: ",(0,i.kt)("inlineCode",{parentName:"p"},"image[key] > value")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'[">=", key, value]')," greater than or equal: ",(0,i.kt)("inlineCode",{parentName:"p"},"image[key] \u2265 value")),(0,i.kt)("p",null,"Set membership"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'["in", key, v0, ..., vn]')," set inclusion: ",(0,i.kt)("inlineCode",{parentName:"p"},"image[key] \u2208 {v0, ..., vn}")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'["!in", key, v0, ..., vn]')," set exclusion: ",(0,i.kt)("inlineCode",{parentName:"p"},"image[key] \u2209 {v0, ..., vn}")),(0,i.kt)("p",null,"Combining"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'["all", f0, ..., fn]')," logical ",(0,i.kt)("inlineCode",{parentName:"p"},"AND"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"f0 \u2227 ... \u2227 fn")),(0,i.kt)("p",null,"A key must be a string that identifies a property name of a\nsimple ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.Image"},"Image")," property, i.e. a key of the ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/modules/viewer#filterkey"},"FilterKey"),"\ntype. A value must be a string, number, or\nboolean. Strictly-typed comparisons are used. The values\n",(0,i.kt)("inlineCode",{parentName:"p"},"f0, ..., fn")," of the combining filter must be filter expressions."),(0,i.kt)("p",null,"Clear the filter by setting it to null or empty array."),(0,i.kt)("p",null,"Commonly used filter properties (see the ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.Image"},"Image")," class\ndocumentation for a full list of properties that can be used\nin a filter) are shown the the example code."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Examples\nviewer.setFilter(["==", "cameraType", "spherical"]);\nviewer.setFilter([">=", "capturedAt", <my-time-stamp>]);\nviewer.setFilter(["in", "sequenceId", "<sequence-id-1>", "<sequence-id-2>"]);\n')),(0,i.kt)("h4",{id:"parameters-55"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"filter?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/modules/viewer#filterexpression"},(0,i.kt)("inlineCode",{parentName:"a"},"FilterExpression")))))),(0,i.kt)("h4",{id:"returns-75"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Promise that resolves after filter is applied."),(0,i.kt)("h4",{id:"implementation-of-54"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#setfilter"},"setFilter")),(0,i.kt)("h4",{id:"defined-in-76"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1538"},"viewer/Viewer.ts:1538")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setrendermode"},"setRenderMode"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setRenderMode"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"renderMode"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Set the viewer's render mode."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.setRenderMode(RenderMode.Letterbox);\n")),(0,i.kt)("h4",{id:"parameters-56"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"renderMode")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/enums/viewer.RenderMode"},(0,i.kt)("inlineCode",{parentName:"a"},"RenderMode"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Render mode.")))),(0,i.kt)("h4",{id:"returns-76"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-55"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#setrendermode"},"setRenderMode")),(0,i.kt)("h4",{id:"defined-in-77"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1562"},"viewer/Viewer.ts:1562")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"settransitionmode"},"setTransitionMode"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setTransitionMode"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"transitionMode"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Set the viewer's transition mode."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.setTransitionMode(TransitionMode.Instantaneous);\n")),(0,i.kt)("h4",{id:"parameters-57"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"transitionMode")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/mapillary-js/api/enums/viewer.TransitionMode"},(0,i.kt)("inlineCode",{parentName:"a"},"TransitionMode"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Transition mode.")))),(0,i.kt)("h4",{id:"returns-77"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-56"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#settransitionmode"},"setTransitionMode")),(0,i.kt)("h4",{id:"defined-in-78"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1576"},"viewer/Viewer.ts:1576")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setzoom"},"setZoom"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setZoom"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"zoom"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Set the image's current zoom level."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," Possible zoom level values are on the ","[0, 3]"," interval.\nZero means zooming out to fit the image to the view whereas three\nshows the highest level of detail."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.setZoom(2);\n")),(0,i.kt)("h4",{id:"parameters-58"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"zoom")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h4",{id:"returns-78"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-57"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#setzoom"},"setZoom")),(0,i.kt)("h4",{id:"defined-in-79"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1642"},"viewer/Viewer.ts:1642")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"triggerrerender"},"triggerRerender"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"triggerRerender"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Trigger the rendering of a single frame."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," Use this method with custom renderers to\nforce the viewer to rerender when the custom content\nchanges. Calling this multiple times before the next\nframe is rendered will still result in only a single\nframe being rendered."),(0,i.kt)("h4",{id:"returns-79"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"implementation-of-58"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#triggerrerender"},"triggerRerender")),(0,i.kt)("h4",{id:"defined-in-80"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1655"},"viewer/Viewer.ts:1655")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"unproject"},"unproject"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"unproject"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"pixelPoint"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.LngLat"},(0,i.kt)("inlineCode",{parentName:"a"},"LngLat")),">"),(0,i.kt)("p",null,"Unproject canvas pixel coordinates to geodetic\ncoordinates."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The pixel point may not always correspond to geodetic\ncoordinates. In the case of no correspondence the returned value will\nbe ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,i.kt)("p",null,"The unprojection to a lngLat will be performed towards the ground plane, i.e.\nthe altitude with respect to the ground plane for the returned lngLat is zero."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.unproject([100, 100])\n    .then(lngLat => { console.log(lngLat); });\n")),(0,i.kt)("h4",{id:"parameters-59"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"pixelPoint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Pixel coordinates to unproject.")))),(0,i.kt)("h4",{id:"returns-80"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.LngLat"},(0,i.kt)("inlineCode",{parentName:"a"},"LngLat")),">"),(0,i.kt)("p",null,"Promise to the lngLat corresponding to the pixel point."),(0,i.kt)("h4",{id:"implementation-of-59"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#unproject"},"unproject")),(0,i.kt)("h4",{id:"defined-in-81"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1679"},"viewer/Viewer.ts:1679")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"unprojecttobasic"},"unprojectToBasic"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"unprojectToBasic"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"pixelPoint"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"[]",">"),(0,i.kt)("p",null,"Unproject canvas pixel coordinates to basic image coordinates for the\ncurrent image."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The pixel point may not always correspond to basic image\ncoordinates. In the case of no correspondence the returned value will\nbe ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"viewer.unprojectToBasic([100, 100])\n    .then(basicPoint => { console.log(basicPoint); });\n")),(0,i.kt)("h4",{id:"parameters-60"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"pixelPoint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Pixel coordinates to unproject.")))),(0,i.kt)("h4",{id:"returns-81"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"[]",">"),(0,i.kt)("p",null,"Promise to the basic coordinates corresponding\nto the pixel point."),(0,i.kt)("h4",{id:"implementation-of-60"},"Implementation of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer"},"IViewer"),".",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.IViewer#unprojecttobasic"},"unprojectToBasic")),(0,i.kt)("h4",{id:"defined-in-82"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/viewer/Viewer.ts#L1711"},"viewer/Viewer.ts:1711")))}k.isMDXComponent=!0}}]);