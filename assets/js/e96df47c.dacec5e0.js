"use strict";(self.webpackChunkmapillary_js_doc=self.webpackChunkmapillary_js_doc||[]).push([[2665],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(t),d=o,f=c["".concat(p,".").concat(d)]||c[d]||m[d]||i;return t?r.createElement(f,a(a({ref:n},u),{},{components:t})):r.createElement(f,a({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=c;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8574:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return m}});var r=t(2122),o=t(9756),i=(t(7294),t(3905)),a={id:"component.SliderConfigurationMode",title:"Enumeration: SliderConfigurationMode",sidebar_label:"SliderConfigurationMode",custom_edit_url:null},l=void 0,p={unversionedId:"enums/component.SliderConfigurationMode",id:"enums/component.SliderConfigurationMode",isDocsHomePage:!1,title:"Enumeration: SliderConfigurationMode",description:"component.SliderConfigurationMode",source:"@site/api/enums/component.SliderConfigurationMode.md",sourceDirName:"enums",slug:"/enums/component.SliderConfigurationMode",permalink:"/mapillary-js/api/enums/component.SliderConfigurationMode",editUrl:null,tags:[],version:"current",frontMatter:{id:"component.SliderConfigurationMode",title:"Enumeration: SliderConfigurationMode",sidebar_label:"SliderConfigurationMode",custom_edit_url:null},sidebar:"api",previous:{title:"PointVisualizationMode",permalink:"/mapillary-js/api/enums/component.PointVisualizationMode"},next:{title:"TagDomain",permalink:"/mapillary-js/api/enums/component.TagDomain"}},s=[{value:"Enumeration members",id:"enumeration-members",children:[{value:"Motion",id:"motion",children:[]},{value:"Stationary",id:"stationary",children:[]}]}],u={toc:s};function m(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/modules/component"},"component"),".SliderConfigurationMode"),(0,i.kt)("p",null,"Enumeration for slider mode."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"readonly"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," Modes for specifying how transitions\nbetween images are performed in slider mode. Only\napplicable when the slider component determines\nthat transitions with motion is possilble. When it\nis not, the stationary mode will be applied."),(0,i.kt)("h2",{id:"enumeration-members"},"Enumeration members"),(0,i.kt)("h3",{id:"motion"},"Motion"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Motion")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"0")),(0,i.kt)("p",null,"Transitions with motion."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The slider component moves the\ncamera between the image origins."),(0,i.kt)("p",null,"In this mode it is not possible to zoom or pan."),(0,i.kt)("p",null,"The slider component falls back to stationary\nmode when it determines that the pair of images\ndoes not have a strong enough relation."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/interfaces/SliderConfiguration.ts#L28"},"component/interfaces/SliderConfiguration.ts:28")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"stationary"},"Stationary"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Stationary")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"1")),(0,i.kt)("p",null,"Stationary transitions."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," The camera is stationary."),(0,i.kt)("p",null,"In this mode it is possible to zoom and pan."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/interfaces/SliderConfiguration.ts#L37"},"component/interfaces/SliderConfiguration.ts:37")))}m.isMDXComponent=!0}}]);