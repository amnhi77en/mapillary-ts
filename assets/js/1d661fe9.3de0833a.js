"use strict";(self.webpackChunkmapillary_js_doc=self.webpackChunkmapillary_js_doc||[]).push([[5957],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return g}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),m=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),s=m(n),g=r,c=s["".concat(l,".").concat(g)]||s[g]||k[g]||p;return n?a.createElement(c,o(o({ref:t},d),{},{components:n})):a.createElement(c,o({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,o=new Array(p);o[0]=s;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var m=2;m<p;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},1942:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return m},default:function(){return k}});var a=n(2122),r=n(9756),p=(n(7294),n(3905)),o={id:"component.TagComponent",title:"Class: TagComponent",sidebar_label:"TagComponent",custom_edit_url:null},i=void 0,l={unversionedId:"classes/component.TagComponent",id:"classes/component.TagComponent",isDocsHomePage:!1,title:"Class: TagComponent",description:"component.TagComponent",source:"@site/api/classes/component.TagComponent.md",sourceDirName:"classes",slug:"/classes/component.TagComponent",permalink:"/mapillary-js/api/classes/component.TagComponent",editUrl:null,tags:[],version:"current",frontMatter:{id:"component.TagComponent",title:"Class: TagComponent",sidebar_label:"TagComponent",custom_edit_url:null},sidebar:"api",previous:{title:"Tag",permalink:"/mapillary-js/api/classes/component.Tag"},next:{title:"TouchZoomHandler",permalink:"/mapillary-js/api/classes/component.TouchZoomHandler"}},m=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Events",id:"events",children:[{value:"on",id:"on",children:[]}]},{value:"Properties",id:"properties",children:[{value:"componentName",id:"componentname",children:[]}]},{value:"Accessors",id:"accessors",children:[{value:"activated",id:"activated",children:[]},{value:"defaultConfiguration",id:"defaultconfiguration",children:[]},{value:"name",id:"name",children:[]}]},{value:"Methods",id:"methods",children:[{value:"add",id:"add",children:[]},{value:"calculateRect",id:"calculaterect",children:[]},{value:"changeMode",id:"changemode",children:[]},{value:"configure",id:"configure",children:[]},{value:"create",id:"create",children:[]},{value:"fire",id:"fire",children:[]},{value:"get",id:"get",children:[]},{value:"getAll",id:"getall",children:[]},{value:"getTagIdsAt",id:"gettagidsat",children:[]},{value:"has",id:"has",children:[]},{value:"off",id:"off",children:[]},{value:"remove",id:"remove",children:[]},{value:"removeAll",id:"removeall",children:[]}]}],d={toc:m};function k(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,p.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/modules/component"},"component"),".TagComponent"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"classdesc"))," Component for showing and editing tags with different\ngeometries composed from 2D basic image coordinates (see the\n",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.Viewer"},"Viewer")," class documentation for more information about coordinate\nsystems)."),(0,p.kt)("p",null,"The ",(0,p.kt)("inlineCode",{parentName:"p"},"add")," method is used for adding new tags or replacing\ntags already in the set. Tags are removed by id."),(0,p.kt)("p",null,"If a tag already in the set has the same\nid as one of the tags added, the old tag will be removed and\nthe added tag will take its place."),(0,p.kt)("p",null,"The tag component mode can be set to either be non interactive or\nto be in creating mode of a certain geometry type."),(0,p.kt)("p",null,"The tag properties can be updated at any time and the change will\nbe visibile immediately."),(0,p.kt)("p",null,"Tags are only relevant to a single image because they are based on\n2D basic image coordinates. Tags related to a certain image should\nbe removed when the viewer is moved to another image."),(0,p.kt)("p",null,"To retrive and use the tag component"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},'var viewer = new Viewer({ component: { tag: true } }, ...);\n\nvar tagComponent = viewer.getComponent("tag");\n')),(0,p.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Component"},(0,p.kt)("inlineCode",{parentName:"a"},"Component")),"<",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/component.TagConfiguration"},(0,p.kt)("inlineCode",{parentName:"a"},"TagConfiguration")),">"),(0,p.kt)("p",{parentName:"li"},"\u21b3 ",(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"TagComponent"))))),(0,p.kt)("h2",{id:"events"},"Events"),(0,p.kt)("h3",{id:"on"},"on"),(0,p.kt)("p",null,"\u2022 ",(0,p.kt)("strong",{parentName:"p"},"on"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("p",null,"Event fired when a geometry has been created."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},"// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\nvar component = viewer.getComponent('<component-name>');\n// Set an event listener\ncomponent.on('geometrycreated', function() {\n  console.log(\"A geometrycreated event has occurred.\");\n});\n")),(0,p.kt)("h4",{id:"parameters"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"type")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},'"geometrycreate"'))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"handler")),(0,p.kt)("td",{parentName:"tr",align:"left"},"(",(0,p.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/component.ComponentGeometryEvent"},(0,p.kt)("inlineCode",{parentName:"a"},"ComponentGeometryEvent")),") => ",(0,p.kt)("inlineCode",{parentName:"td"},"void"))))),(0,p.kt)("h4",{id:"returns"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"overrides"},"Overrides"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Component"},"Component"),".",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Component#on"},"on")),(0,p.kt)("h4",{id:"defined-in"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L571"},"component/tag/TagComponent.ts:571")),(0,p.kt)("p",null,"\u2022 ",(0,p.kt)("strong",{parentName:"p"},"on"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("p",null,"Event fired when an interaction to create a geometry ends."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"description"))," A create interaction can by a geometry being created\nor by the creation being aborted."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},"// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\nvar component = viewer.getComponent('<component-name>');\n// Set an event listener\ncomponent.on('tagcreateend', function() {\n  console.log(\"A tagcreateend event has occurred.\");\n});\n")),(0,p.kt)("h4",{id:"parameters-1"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"type")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},'"tagcreateend"'))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"handler")),(0,p.kt)("td",{parentName:"tr",align:"left"},"(",(0,p.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/component.ComponentStateEvent"},(0,p.kt)("inlineCode",{parentName:"a"},"ComponentStateEvent")),") => ",(0,p.kt)("inlineCode",{parentName:"td"},"void"))))),(0,p.kt)("h4",{id:"returns-1"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L593"},"component/tag/TagComponent.ts:593")),(0,p.kt)("p",null,"\u2022 ",(0,p.kt)("strong",{parentName:"p"},"on"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("p",null,"Event fired when an interaction to create a geometry starts."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"description"))," A create interaction starts when the first vertex\nis created in the geometry."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},"// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\nvar component = viewer.getComponent('<component-name>');\n// Set an event listener\ncomponent.on('tagcreatestart', function() {\n  console.log(\"A tagcreatestart event has occurred.\");\n});\n")),(0,p.kt)("h4",{id:"parameters-2"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"type")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},'"tagcreatestart"'))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"handler")),(0,p.kt)("td",{parentName:"tr",align:"left"},"(",(0,p.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/component.ComponentStateEvent"},(0,p.kt)("inlineCode",{parentName:"a"},"ComponentStateEvent")),") => ",(0,p.kt)("inlineCode",{parentName:"td"},"void"))))),(0,p.kt)("h4",{id:"returns-2"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L615"},"component/tag/TagComponent.ts:615")),(0,p.kt)("p",null,"\u2022 ",(0,p.kt)("strong",{parentName:"p"},"on"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("p",null,"Event fired when the create mode is changed."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},"// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\nvar component = viewer.getComponent('<component-name>');\n// Set an event listener\ncomponent.on('tagmode', function() {\n  console.log(\"A tagmode event has occurred.\");\n});\n")),(0,p.kt)("h4",{id:"parameters-3"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"type")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},'"tagmode"'))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"handler")),(0,p.kt)("td",{parentName:"tr",align:"left"},"(",(0,p.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/component.ComponentTagModeEvent"},(0,p.kt)("inlineCode",{parentName:"a"},"ComponentTagModeEvent")),") => ",(0,p.kt)("inlineCode",{parentName:"td"},"void"))))),(0,p.kt)("h4",{id:"returns-3"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L634"},"component/tag/TagComponent.ts:634")),(0,p.kt)("p",null,"\u2022 ",(0,p.kt)("strong",{parentName:"p"},"on"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("p",null,"Event fired when the tags collection has changed."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},"// Initialize the viewer\nvar viewer = new Viewer({ // viewer options });\nvar component = viewer.getComponent('<component-name>');\n// Set an event listener\ncomponent.on('tags', function() {\n  console.log(\"A tags event has occurred.\");\n});\n")),(0,p.kt)("h4",{id:"parameters-4"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"type")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},'"tags"'))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"handler")),(0,p.kt)("td",{parentName:"tr",align:"left"},"(",(0,p.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/component.ComponentStateEvent"},(0,p.kt)("inlineCode",{parentName:"a"},"ComponentStateEvent")),") => ",(0,p.kt)("inlineCode",{parentName:"td"},"void"))))),(0,p.kt)("h4",{id:"returns-4"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L653"},"component/tag/TagComponent.ts:653")),(0,p.kt)("h2",{id:"properties"},"Properties"),(0,p.kt)("h3",{id:"componentname"},"componentName"),(0,p.kt)("p",null,"\u25aa ",(0,p.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,p.kt)("strong",{parentName:"p"},"componentName"),": ",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/modules/component#componentname"},(0,p.kt)("inlineCode",{parentName:"a"},"ComponentName"))," = ",(0,p.kt)("inlineCode",{parentName:"p"},'"tag"')),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"inheritdoc"))),(0,p.kt)("h4",{id:"overrides-1"},"Overrides"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Component"},"Component"),".",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Component#componentname"},"componentName")),(0,p.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L98"},"component/tag/TagComponent.ts:98")),(0,p.kt)("h2",{id:"accessors"},"Accessors"),(0,p.kt)("h3",{id:"activated"},"activated"),(0,p.kt)("p",null,"\u2022 ",(0,p.kt)("inlineCode",{parentName:"p"},"get")," ",(0,p.kt)("strong",{parentName:"p"},"activated"),"(): ",(0,p.kt)("inlineCode",{parentName:"p"},"boolean")),(0,p.kt)("p",null,"Get activated."),(0,p.kt)("h4",{id:"returns-5"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"boolean")),(0,p.kt)("p",null,"Value indicating if the component is\ncurrently active."),(0,p.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/Component.ts#L78"},"component/Component.ts:78")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"defaultconfiguration"},"defaultConfiguration"),(0,p.kt)("p",null,"\u2022 ",(0,p.kt)("inlineCode",{parentName:"p"},"get")," ",(0,p.kt)("strong",{parentName:"p"},"defaultConfiguration"),"(): ",(0,p.kt)("inlineCode",{parentName:"p"},"TConfiguration")),(0,p.kt)("p",null,"Get default configuration."),(0,p.kt)("h4",{id:"returns-6"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"TConfiguration")),(0,p.kt)("p",null,"Default configuration for component."),(0,p.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/Component.ts#L92"},"component/Component.ts:92")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"name"},"name"),(0,p.kt)("p",null,"\u2022 ",(0,p.kt)("inlineCode",{parentName:"p"},"get")," ",(0,p.kt)("strong",{parentName:"p"},"name"),"(): ",(0,p.kt)("inlineCode",{parentName:"p"},"string")),(0,p.kt)("p",null,"Get name."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"description"))," The name of the component. Used when interacting with the\ncomponent through the Viewer's API."),(0,p.kt)("h4",{id:"returns-7"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"string")),(0,p.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/Component.ts#L107"},"component/Component.ts:107")),(0,p.kt)("h2",{id:"methods"},"Methods"),(0,p.kt)("h3",{id:"add"},"add"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"add"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"tags"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("p",null,"Add tags to the tag set or replace tags in the tag set."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"description"))," If a tag already in the set has the same\nid as one of the tags added, the old tag will be removed\nthe added tag will take its place."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},"tagComponent.add([tag1, tag2]);\n")),(0,p.kt)("h4",{id:"parameters-5"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"tags")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/classes/component.Tag"},(0,p.kt)("inlineCode",{parentName:"a"},"Tag")),"[]"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Tags to add.")))),(0,p.kt)("h4",{id:"returns-8"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L289"},"component/tag/TagComponent.ts:289")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"calculaterect"},"calculateRect"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"calculateRect"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"geometry"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,p.kt)("inlineCode",{parentName:"p"},"number"),"[]",">"),(0,p.kt)("p",null,"Calculate the smallest rectangle containing all the points\nin the points geometry."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"description"))," The result may be different depending on if the\ncurrent image is an spherical or not. If the\ncurrent image is an spherical the rectangle may\nwrap the horizontal border of the image."),(0,p.kt)("h4",{id:"parameters-6"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"geometry")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/classes/component.PointsGeometry"},(0,p.kt)("inlineCode",{parentName:"a"},"PointsGeometry")))))),(0,p.kt)("h4",{id:"returns-9"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,p.kt)("inlineCode",{parentName:"p"},"number"),"[]",">"),(0,p.kt)("p",null,"Promise to the rectangle\non the format specified for the ",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.RectGeometry"},"RectGeometry")," in basic\ncoordinates."),(0,p.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L323"},"component/tag/TagComponent.ts:323")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"changemode"},"changeMode"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"changeMode"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"mode"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("p",null,"Change the current tag mode."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"description"))," Change the tag mode to one of the create modes for creating new geometries."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"fires"))," tagmode"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},"tagComponent.changeMode(TagMode.CreateRect);\n")),(0,p.kt)("h4",{id:"parameters-7"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"mode")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/enums/component.TagMode"},(0,p.kt)("inlineCode",{parentName:"a"},"TagMode"))),(0,p.kt)("td",{parentName:"tr",align:"left"},"New tag mode.")))),(0,p.kt)("h4",{id:"returns-10"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L398"},"component/tag/TagComponent.ts:398")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"configure"},"configure"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"configure"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"configuration"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("p",null,"Configure the component."),(0,p.kt)("h4",{id:"parameters-8"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"configuration")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/component.TagConfiguration"},(0,p.kt)("inlineCode",{parentName:"a"},"TagConfiguration"))),(0,p.kt)("td",{parentName:"tr",align:"left"},"Component configuration.")))),(0,p.kt)("h4",{id:"returns-11"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Component"},"Component"),".",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Component#configure"},"configure")),(0,p.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/Component.ts#L131"},"component/Component.ts:131")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"create"},"create"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"create"),"(): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("p",null,"Force the creation of a geometry programatically using its\ncurrent vertices."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"description"))," The method only has an effect when the tag\nmode is either of the following modes:"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/component.TagMode#createpoints"},"TagMode.CreatePoints"),"\n",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/component.TagMode#createpolygon"},"TagMode.CreatePolygon"),"\n",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/component.TagMode#createrect"},"TagMode.CreateRect"),"\n",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/component.TagMode#createrectdrag"},"TagMode.CreateRectDrag")),(0,p.kt)("p",null,"In the case of points or polygon creation, only the created\nvertices are used, i.e. the mouse position is disregarded."),(0,p.kt)("p",null,"In the case of rectangle creation the position of the mouse\nat the time of the method call is used as one of the vertices\ndefining the rectangle."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"fires"))," geometrycreate"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},'tagComponent.on("geometrycreate", function(geometry) {\n    console.log(geometry);\n});\n\ntagComponent.create();\n')),(0,p.kt)("h4",{id:"returns-12"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L371"},"component/tag/TagComponent.ts:371")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"fire"},"fire"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"fire"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"event"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"parameters-9"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"type")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},'"geometrycreate"'))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"event")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/component.ComponentGeometryEvent"},(0,p.kt)("inlineCode",{parentName:"a"},"ComponentGeometryEvent")))))),(0,p.kt)("h4",{id:"returns-13"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"overrides-2"},"Overrides"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Component"},"Component"),".",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Component#fire"},"fire")),(0,p.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L402"},"../doc/component/tag/TagComponent.ts:402")),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"fire"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"event"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"parameters-10"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"type")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},'"tagmode"'))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"event")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/component.ComponentTagModeEvent"},(0,p.kt)("inlineCode",{parentName:"a"},"ComponentTagModeEvent")))))),(0,p.kt)("h4",{id:"returns-14"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"overrides-3"},"Overrides"),(0,p.kt)("p",null,"Component.fire"),(0,p.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L406"},"../doc/component/tag/TagComponent.ts:406")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"get"},"get"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"get"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"tagId"),"): ",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Tag"},(0,p.kt)("inlineCode",{parentName:"a"},"Tag"))),(0,p.kt)("p",null,"Returns the tag in the tag set with the specified id, or\nundefined if the id matches no tag."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},'var tag = tagComponent.get("tagId");\n')),(0,p.kt)("h4",{id:"parameters-11"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"tagId")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"string")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Id of the tag.")))),(0,p.kt)("h4",{id:"returns-15"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Tag"},(0,p.kt)("inlineCode",{parentName:"a"},"Tag"))),(0,p.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L436"},"component/tag/TagComponent.ts:436")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"getall"},"getAll"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"getAll"),"(): ",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Tag"},(0,p.kt)("inlineCode",{parentName:"a"},"Tag")),"[]"),(0,p.kt)("p",null,"Returns an array of all tags."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},"var tags = tagComponent.getAll();\n")),(0,p.kt)("h4",{id:"returns-16"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Tag"},(0,p.kt)("inlineCode",{parentName:"a"},"Tag")),"[]"),(0,p.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L453"},"component/tag/TagComponent.ts:453")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"gettagidsat"},"getTagIdsAt"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"getTagIdsAt"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"pixelPoint"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,p.kt)("inlineCode",{parentName:"p"},"string"),"[]",">"),(0,p.kt)("p",null,"Returns an array of tag ids for tags that contain the specified point."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"description"))," The pixel point must lie inside the polygon or rectangle\nof an added tag for the tag id to be returned. Tag ids for\ntags that do not have a fill will also be returned if the point is inside\nthe geometry of the tag. Tags with point geometries can not be retrieved."),(0,p.kt)("p",null,"No tag ids will be returned for polygons rendered in cropped spherical or\nrectangles rendered in spherical."),(0,p.kt)("p",null,"Notice that the pixelPoint argument requires x, y coordinates from pixel space."),(0,p.kt)("p",null,"With this function, you can use the coordinates provided by mouse\nevents to get information out of the tag component."),(0,p.kt)("p",null,"If no tag at exist the pixel point, an empty array will be returned."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},"tagComponent.getTagIdsAt([100, 100])\n    .then((tagIds) => { console.log(tagIds); });\n")),(0,p.kt)("h4",{id:"parameters-12"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"pixelPoint")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"number"),"[]"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Pixel coordinates on the viewer element.")))),(0,p.kt)("h4",{id:"returns-17"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,p.kt)("inlineCode",{parentName:"p"},"string"),"[]",">"),(0,p.kt)("p",null,"Promise to the ids of the tags that\ncontain the specified pixel point."),(0,p.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L494"},"component/tag/TagComponent.ts:494")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"has"},"has"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"has"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"tagId"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"boolean")),(0,p.kt)("p",null,"Check if a tag exist in the tag set."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},'var tagExists = tagComponent.has("tagId");\n')),(0,p.kt)("h4",{id:"parameters-13"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"tagId")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"string")),(0,p.kt)("td",{parentName:"tr",align:"left"},"Id of the tag.")))),(0,p.kt)("h4",{id:"returns-18"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"boolean")),(0,p.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L530"},"component/tag/TagComponent.ts:530")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"off"},"off"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"off"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("p",null,"Unsubscribe from an event by its name."),(0,p.kt)("h4",{id:"parameters-14"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"type")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},'"geometrycreate"'))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"handler")),(0,p.kt)("td",{parentName:"tr",align:"left"},"(",(0,p.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/component.ComponentGeometryEvent"},(0,p.kt)("inlineCode",{parentName:"a"},"ComponentGeometryEvent")),") => ",(0,p.kt)("inlineCode",{parentName:"td"},"void"))))),(0,p.kt)("h4",{id:"returns-19"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"overrides-4"},"Overrides"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Component"},"Component"),".",(0,p.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.Component#off"},"off")),(0,p.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L534"},"component/tag/TagComponent.ts:534")),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"off"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"parameters-15"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"type")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},'"tagmode"'))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"handler")),(0,p.kt)("td",{parentName:"tr",align:"left"},"(",(0,p.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/component.ComponentTagModeEvent"},(0,p.kt)("inlineCode",{parentName:"a"},"ComponentTagModeEvent")),") => ",(0,p.kt)("inlineCode",{parentName:"td"},"void"))))),(0,p.kt)("h4",{id:"returns-20"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"overrides-5"},"Overrides"),(0,p.kt)("p",null,"Component.off"),(0,p.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L538"},"component/tag/TagComponent.ts:538")),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"off"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"parameters-16"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"type")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},'"tagcreateend"')," ","|"," ",(0,p.kt)("inlineCode",{parentName:"td"},'"tagcreatestart"')," ","|"," ",(0,p.kt)("inlineCode",{parentName:"td"},'"tags"'))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"handler")),(0,p.kt)("td",{parentName:"tr",align:"left"},"(",(0,p.kt)("inlineCode",{parentName:"td"},"event"),": ",(0,p.kt)("a",{parentName:"td",href:"/mapillary-js/api/interfaces/component.ComponentStateEvent"},(0,p.kt)("inlineCode",{parentName:"a"},"ComponentStateEvent")),") => ",(0,p.kt)("inlineCode",{parentName:"td"},"void"))))),(0,p.kt)("h4",{id:"returns-21"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"overrides-6"},"Overrides"),(0,p.kt)("p",null,"Component.off"),(0,p.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L542"},"component/tag/TagComponent.ts:542")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"remove"},"remove"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"remove"),"(",(0,p.kt)("inlineCode",{parentName:"p"},"tagIds"),"): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("p",null,"Remove tags with the specified ids from the tag set."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},'tagComponent.remove(["id-1", "id-2"]);\n')),(0,p.kt)("h4",{id:"parameters-17"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"tagIds")),(0,p.kt)("td",{parentName:"tr",align:"left"},(0,p.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Ids for tags to remove.")))),(0,p.kt)("h4",{id:"returns-22"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L674"},"component/tag/TagComponent.ts:674")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"removeall"},"removeAll"),(0,p.kt)("p",null,"\u25b8 ",(0,p.kt)("strong",{parentName:"p"},"removeAll"),"(): ",(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("p",null,"Remove all tags from the tag set."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},(0,p.kt)("inlineCode",{parentName:"strong"},"example"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-js"},"tagComponent.removeAll();\n")),(0,p.kt)("h4",{id:"returns-23"},"Returns"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"void")),(0,p.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/component/tag/TagComponent.ts#L691"},"component/tag/TagComponent.ts:691")))}k.isMDXComponent=!0}}]);