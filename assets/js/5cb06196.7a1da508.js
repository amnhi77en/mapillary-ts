"use strict";(self.webpackChunkmapillary_js_doc=self.webpackChunkmapillary_js_doc||[]).push([[7763],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return c}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var m=n.createContext({}),o=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},s=function(e){var t=o(e.components);return n.createElement(m.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,m=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=o(a),c=i,k=u["".concat(m,".").concat(c)]||u[c]||d[c]||r;return a?n.createElement(k,p(p({ref:t},s),{},{components:a})):n.createElement(k,p({ref:t},s))}));function c(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,p=new Array(r);p[0]=u;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:i,p[1]=l;for(var o=2;o<r;o++)p[o]=a[o];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2352:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return m},toc:function(){return o},default:function(){return d}});var n=a(2122),i=a(9756),r=(a(7294),a(3905)),p={id:"api.SpatialImageEnt",title:"Interface: SpatialImageEnt",sidebar_label:"SpatialImageEnt",custom_edit_url:null},l=void 0,m={unversionedId:"interfaces/api.SpatialImageEnt",id:"interfaces/api.SpatialImageEnt",isDocsHomePage:!1,title:"Interface: SpatialImageEnt",description:"api.SpatialImageEnt",source:"@site/api/interfaces/api.SpatialImageEnt.md",sourceDirName:"interfaces",slug:"/interfaces/api.SpatialImageEnt",permalink:"/mapillary-js/api/interfaces/api.SpatialImageEnt",editUrl:null,tags:[],version:"current",frontMatter:{id:"api.SpatialImageEnt",title:"Interface: SpatialImageEnt",sidebar_label:"SpatialImageEnt",custom_edit_url:null},sidebar:"api",previous:{title:"SequenceEnt",permalink:"/mapillary-js/api/interfaces/api.SequenceEnt"},next:{title:"URLEnt",permalink:"/mapillary-js/api/interfaces/api.URLEnt"}},o=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Properties",id:"properties",children:[{value:"altitude",id:"altitude",children:[]},{value:"atomic_scale",id:"atomic_scale",children:[]},{value:"camera_parameters",id:"camera_parameters",children:[]},{value:"camera_type",id:"camera_type",children:[]},{value:"captured_at",id:"captured_at",children:[]},{value:"cluster",id:"cluster",children:[]},{value:"compass_angle",id:"compass_angle",children:[]},{value:"computed_altitude",id:"computed_altitude",children:[]},{value:"computed_compass_angle",id:"computed_compass_angle",children:[]},{value:"computed_rotation",id:"computed_rotation",children:[]},{value:"creator",id:"creator",children:[]},{value:"exif_orientation",id:"exif_orientation",children:[]},{value:"height",id:"height",children:[]},{value:"id",id:"id",children:[]},{value:"merge_id",id:"merge_id",children:[]},{value:"mesh",id:"mesh",children:[]},{value:"owner",id:"owner",children:[]},{value:"private",id:"private",children:[]},{value:"quality_score",id:"quality_score",children:[]},{value:"thumb",id:"thumb",children:[]},{value:"width",id:"width",children:[]}]}],s={toc:o};function d(e){var t=e.components,a=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/modules/api"},"api"),".SpatialImageEnt"),(0,r.kt)("p",null,"Ent representing spatial image properties."),(0,r.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.CameraEnt"},(0,r.kt)("inlineCode",{parentName:"a"},"CameraEnt")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.IDEnt"},(0,r.kt)("inlineCode",{parentName:"a"},"IDEnt"))),(0,r.kt)("p",{parentName:"li"},"\u21b3 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"SpatialImageEnt"))),(0,r.kt)("p",{parentName:"li"},"\u21b3\u21b3 ",(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.ImageEnt"},(0,r.kt)("inlineCode",{parentName:"a"},"ImageEnt"))))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"altitude"},"altitude"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"altitude"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Original EXIF altitude above sea level, in meters."),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L13"},"api/ents/SpatialImageEnt.ts:13")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"atomic_scale"},"atomic","_","scale"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"atomic","_","scale"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Scale of atomic reconstruction."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"description"))," Optional - no 3D interaction available\nif unset."),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L21"},"api/ents/SpatialImageEnt.ts:21")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"camera_parameters"},"camera","_","parameters"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"camera","_","parameters"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"[]"),(0,r.kt)("p",null,"Camera type dependent camera parameters."),(0,r.kt)("p",null,"For perspective and fisheye camera types,\nthe camera parameters array should be\nconstructed according to"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"[focal, k1, k2]")),(0,r.kt)("p",null,"where focal is the camera focal length,\nand k1, k2 are radial distortion parameters."),(0,r.kt)("p",null,"For spherical camera type the camera\nparameters should be an emtpy array."),(0,r.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.CameraEnt"},"CameraEnt"),".",(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.CameraEnt#camera_parameters"},"camera_parameters")),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/CameraEnt.ts#L20"},"api/ents/CameraEnt.ts:20")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"camera_type"},"camera","_","type"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"camera","_","type"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Projection type of the camera."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"description"))," Supported camera types are:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"  'spherical'\n  'fisheye'\n  'perspective'\n")),(0,r.kt)("p",null,"Other camera types will be treated as\nperspective images."),(0,r.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.CameraEnt"},"CameraEnt"),".",(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.CameraEnt#camera_type"},"camera_type")),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/CameraEnt.ts#L36"},"api/ents/CameraEnt.ts:36")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"captured_at"},"captured","_","at"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"captured","_","at"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Timestamp representing the capture date and time."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"description"))," Unix epoch timestamp in milliseconds."),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L28"},"api/ents/SpatialImageEnt.ts:28")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"cluster"},"cluster"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"cluster"),": ",(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.URLEnt"},(0,r.kt)("inlineCode",{parentName:"a"},"URLEnt"))),(0,r.kt)("p",null,"Cluster reconstruction to which the image belongs."),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L62"},"api/ents/SpatialImageEnt.ts:62")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"compass_angle"},"compass","_","angle"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"compass","_","angle"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Original EXIF compass angle, measured in degrees."),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L33"},"api/ents/SpatialImageEnt.ts:33")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"computed_altitude"},"computed","_","altitude"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"computed","_","altitude"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Computed altitude, in meters."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"description"))," Optional - no 3D interaction available\nif unset."),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L41"},"api/ents/SpatialImageEnt.ts:41")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"computed_compass_angle"},"computed","_","compass","_","angle"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"computed","_","compass","_","angle"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"SfM computed compass angle, measured in degrees."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"description"))," Optional - no 3D interaction available\nif unset."),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L49"},"api/ents/SpatialImageEnt.ts:49")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"computed_rotation"},"computed","_","rotation"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"computed","_","rotation"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"[]"),(0,r.kt)("p",null,"Rotation vector in angle axis representation."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"description"))," Optional - no 3D interaction available\nif unset."),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L57"},"api/ents/SpatialImageEnt.ts:57")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"creator"},"creator"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"creator"),": ",(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.CreatorEnt"},(0,r.kt)("inlineCode",{parentName:"a"},"CreatorEnt"))),(0,r.kt)("p",null,"Image creator."),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L67"},"api/ents/SpatialImageEnt.ts:67")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"exif_orientation"},"exif","_","orientation"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"exif","_","orientation"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"EXIF orientation of original image."),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L72"},"api/ents/SpatialImageEnt.ts:72")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"height"},"height"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"height"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Height of original image, not adjusted for orientation."),(0,r.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L77"},"api/ents/SpatialImageEnt.ts:77")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"id"},"id"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"id"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Unique ID."),(0,r.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.IDEnt"},"IDEnt"),".",(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.IDEnt#id"},"id")),(0,r.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/IDEnt.ts#L10"},"api/ents/IDEnt.ts:10")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"merge_id"},"merge","_","id"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"merge","_","id"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"SfM connected component id to which the image belongs."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"description"))," Optional - no 3D interaction available\nif unset."),(0,r.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L85"},"api/ents/SpatialImageEnt.ts:85")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mesh"},"mesh"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"mesh"),": ",(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.URLEnt"},(0,r.kt)("inlineCode",{parentName:"a"},"URLEnt"))),(0,r.kt)("p",null,"3D mesh resource."),(0,r.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L90"},"api/ents/SpatialImageEnt.ts:90")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"owner"},"owner"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"owner"),": ",(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.IDEnt"},(0,r.kt)("inlineCode",{parentName:"a"},"IDEnt"))),(0,r.kt)("p",null,"Owner to which the image belongs."),(0,r.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L95"},"api/ents/SpatialImageEnt.ts:95")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"private"},"private"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"private"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Value specifying if image is accessible to organization members only\nor to everyone."),(0,r.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L101"},"api/ents/SpatialImageEnt.ts:101")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"quality_score"},"quality","_","score"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"quality","_","score"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Image quality score on the interval ","[0, 1]","."),(0,r.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L106"},"api/ents/SpatialImageEnt.ts:106")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"thumb"},"thumb"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"thumb"),": ",(0,r.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.URLEnt"},(0,r.kt)("inlineCode",{parentName:"a"},"URLEnt"))),(0,r.kt)("p",null,"Image thumbnail resource."),(0,r.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L111"},"api/ents/SpatialImageEnt.ts:111")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"width"},"width"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"width"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Width of original image, not adjusted for orientation."),(0,r.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/486d5b23/src/api/ents/SpatialImageEnt.ts#L116"},"api/ents/SpatialImageEnt.ts:116")))}d.isMDXComponent=!0}}]);